# Generated by Django 4.0 on 2022-01-04 23:37

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import production.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cpf', models.CharField(max_length=14)),
                ('rg', models.CharField(max_length=15)),
                ('birthday', models.DateField()),
                ('certification_number', models.CharField(max_length=255)),
                ('observation', models.TextField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Banks',
            fields=[
                ('id_bank', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('status', models.IntegerField()),
                ('create_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerOrigins',
            fields=[
                ('id_customer_origin', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('status', models.IntegerField()),
                ('create_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id_customer', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('cpf', models.CharField(max_length=14)),
                ('customer_files', models.FileField(blank=True, null=True, upload_to=production.models.upload_archives)),
                ('create_at', models.DateField(auto_now_add=True)),
                ('id_customer_origins', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='customers', to='production.customerorigins')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='customers', to='production.user')),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id_product', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('status', models.IntegerField()),
                ('create_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Promoters',
            fields=[
                ('id_promoter', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('status', models.IntegerField()),
                ('create_at', models.DateField(auto_now_add=True)),
                ('banks', models.ManyToManyField(to='production.Banks')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerService',
            fields=[
                ('id_customer_service', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('proposal_value', models.FloatField()),
                ('proposal_number', models.CharField(max_length=255)),
                ('date_service', models.DateField()),
                ('status', models.CharField(choices=[(1, 'Selecione uma opção'), (2, 'Digitado'), (3, 'Formalizando'), (4, 'Em Andamento'), (5, 'Pendente'), (6, 'Pago'), (7, 'Reprovado'), (8, 'Cancelado')], default=1, max_length=30)),
                ('observation', models.TextField()),
                ('create_at', models.DateField(auto_now_add=True)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='production.banks')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='production.customers')),
                ('customer_origin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='production.customerorigins')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='production.products')),
                ('promoter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='production.promoters')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='production.user')),
            ],
        ),
        migrations.AddField(
            model_name='banks',
            name='products',
            field=models.ManyToManyField(to='production.Products'),
        ),
    ]
